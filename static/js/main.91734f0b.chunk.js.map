{"version":3,"sources":["logo.svg","components/board/node/Node.jsx","components/Header.jsx","components/global.js","global.js","components/Menu.jsx","components/board/Board.jsx","components/Main.jsx","Carox.js","serviceWorker.js","index.js"],"names":["module","exports","Node","props","onNodeClick","extraClassName","clickClass","state","x","y","setState","this","xplayer","oplayer","size","classSize","id","min","className","onClick","Component","Header","src","logo","alt","gameScreen","Menu","onMenuClick","Board","nodes","MinScore","row","col","_nodeCen","Math","floor","_row","currentRow","_col","toString","currentNode","push","jQueryDo","$","document","ready","window","width","outerContent","innerContent","scrollLeft","windowHeight","height","scrollTop","_aNodes","setNodeAttr","node","attr","children","text","setMinInNode","_x","_y","node0","hasClass","deltaX","deltaY","_min","setNodeMore","dX","dY","minScore","_node","parseInt","length","forEach","e","map","rowIdx","key","nodeIdx","onBoardClick","Main","screenIndex","Carox","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.91734f0b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {Component} from 'react';\nimport './Node.css';\n\nexport default class Node extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            clickClass: \"\"\n        };\n    }\n\n    onNodeClick = (extraClassName) => {\n        const {clickClass} = this.state;\n        if(extraClassName === 'node-o' || clickClass === 'node-x') {\n            return;\n        }\n\n        const {x, y} = this.props;\n        this.setState({clickClass: \"node-x\"});\n        this.props.onNodeClick(x, y);\n    }\n    \n    render(){\n        const {xplayer, oplayer, size, x, y} = this.props;\n        let extraClassName = xplayer ? 'node-x' : oplayer ? 'node-o' : '';\n        let classSize = 'node-' + (size ? size : '25');\n        \n        return (\n            <div\n                id={`${x}-${y}`} \n                min=\"0\"\n                className={`node ${classSize} ${extraClassName} ${this.state.clickClass}`}\n                onClick={() => this.onNodeClick(extraClassName)}\n            >\n                <span></span>\n            </div>\n        );\n    }\n}\n\nexport const DEFAULT_NODE = {\n    row: 0,\n    col: 0\n};","import React, {Component} from 'react';\nimport logo from '../logo.svg';\nimport './Header.css';\n\nimport Node from './board/node/Node';\n\nexport default class Header extends Component {\n\t\n\n\trender(){\n\n\t\treturn <div className=\"carox-header\">\n\t\t\t\t <div className=\"flex-grow-1\"> \n\t\t\t\t \t<h5 className=\"player\">Player 1</h5>\n\t\t\t\t \t<Node xplayer={true}/> \n\t\t\t\t </div>\n\t\t\t\t <div className=\"flex-grow-8\">\n\t\t\t\t \t<img src={logo} className=\"Carox-logo\" alt=\"logo\"/>\n\t\t\t\t </div>\n\t\t\t\t <div className=\"flex-grow-1\"> \n\t\t\t\t \t<Node oplayer={true}/> \n\t\t\t\t \t<h5 className=\"player\">Player 2</h5>\n\t\t\t\t </div>\n\t\t\t   </div>\n\t}\n\n}","export const gameScreen = {\n    Home: 0,\n    Caro: 1,\n    TicTacToe: 2\n  };\n\n  export let minScore: {};","export const gameScreen = {\n    Home: 0,\n    Caro: 1,\n    TicTacToe: 2\n  };\n","import React, {Component} from 'react';\nimport {gameScreen} from '../global'\n\nimport './Menu.css';\n\nexport default class Menu extends Component {\n\t\n\trender(){\n\n\t\treturn (\n\t\t\t<div className=\"e-menu\">\n\t\t\t\t<div className=\"menu-button\" \n\t\t\t\tonClick={() => this.props.onMenuClick(gameScreen.Caro)}>\n\t\t\t\t\t<h2>Gomoku - caro</h2>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"menu-button\" \n\t\t\t\tonClick={() => this.props.onMenuClick(gameScreen.TicTacToe)}>\n\t\t\t\t\t<h2>Tic Tac Toe</h2>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}","import React, {Component} from 'react';\nimport Node from './node/Node';\nimport $ from 'jquery';\n\nimport './Board.css';\n\nexport default class Board extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            nodes: [],\n            MinScore: {}\n        }\n    }\n    \n    componentDidMount(){\n        const nodes = [], {row, col} = this.props.size;\n        const _nodeCen = {col: Math.floor(col/2), row: Math.floor(row/2)}\n        for(let _row = 0; _row < row; _row++){\n            const currentRow = [];\n            for(let _col = 0; _col < col; _col++){\n              let y = row - _row - 1, x = _col;\n              let {MinScore} = this.state;\n              MinScore[x.toString() + '_' + y.toString()] = 0;\n\n              this.setState({MinScore});\n              \n                const currentNode = {\n                    _col, \n                    _row,\n                    xplayer: false,\n                    oplayer: _col === _nodeCen.col && _row === _nodeCen.row,\n                    y: y,\n                    x: x\n                };\n                currentRow.push(currentNode);\n            }\n            nodes.push(currentRow);\n        }\n        this.setState({nodes});\n        if(col > 50){\n          this.jQueryDo();\n        }\n        \n    }\n\n    jQueryDo () {\n      $(document).ready(function(){\n        (function resizeBoard () {\n          if($(window).width() < 1313) {\n            var outerContent = $('#main-caro');\n            var innerContent = $('#main-caro .grid');\n            outerContent.scrollLeft((innerContent.width() - outerContent.width()) / 2);\n            \n            let windowHeight = $(window).height();\n            if(windowHeight < 750 + 156){\n              outerContent.height(windowHeight - 156);\n              outerContent.scrollTop((innerContent.height() - outerContent.height()) / 2);\n            }\n          }\n        })();\n      });\n    }\n\n    onBoardClick (x, y) {\n      var _aNodes = [];\n      \n      function setNodeAttr(node, min){\n        node.attr(\"min\", min.toString());\n        node.children('span').text(min.toString());\n      };\n      function setNodeMore(x, y, dX, dY, minScore){\n        let _node = $('#'+ x + '-' + y),\n            min = minScore;\n        if(_node.hasClass('node-x')) {\n          min = setNodeMore(x + dX, y + dY, dX, dY, minScore * 10);\n        } else {\n          setNodeAttr(_node, minScore);\n        }\n        return min;\n      }\n\n      function setMinInNode(_x, _y){\n        let node0 = $('#'+ _x + '-' + _y);\n\n        if(node0.hasClass('node-x')) {\n           let deltaX = _x - x,\n              deltaY = _y - y;\n\n           let _min = setNodeMore(_x + deltaX, _y + deltaY, deltaX, deltaY, -100);\n           \n           if(deltaX === 0 && deltaY === 0) {\n            \n           } else {\n            let _node = $('#'+ (x - deltaX) + '-' + (y - deltaY));\n            _aNodes.push({x: x - deltaX, y: y - deltaY, min: _min});\n\n            setNodeAttr(_node, _min + parseInt(_node.attr('min')));\n           }\n        } else {\n          let min = parseInt(node0.attr('min'));\n          if(_aNodes.length < 1) {\n            min += -1;\n          } else {\n            _aNodes.forEach(function(e){\n              if(_x === e.x && _y === e.y) {\n                \n              } else {\n                min += -1;\n              }\n            });\n          }\n          \n          setNodeAttr(node0, min.toString());\n        }\n      }\n\n      var _x = x - 1, _y = y - 1;\n      setMinInNode(_x, _y);\n\n      _x = x; _y = y - 1;\n      setMinInNode(_x, _y);\n      \n      _x = x + 1; _y = y - 1;\n      setMinInNode(_x, _y);\n\n      _x = x - 1; _y = y;\n      setMinInNode(_x, _y);\n\n      _x = x + 1; _y = y;\n      setMinInNode(_x, _y);\n\n      _x = x - 1; _y = y + 1;\n      setMinInNode(_x, _y);\n\n      _x = x; _y = y + 1;\n      setMinInNode(_x, _y);\n\n      _x = x + 1; _y = y + 1;\n      setMinInNode(_x, _y);\n        \n    }\n\n    render(){\n        const {nodes} = this.state,\n              {size} = this.props;\n        \n        \n        return (\n          <div className=\"grid\">\n            {nodes.map((row, rowIdx) => {\n                  return (\n                   <div key={rowIdx}>\n                     {row.map((node, nodeIdx) => {\n                      const {xplayer, oplayer, x, y} =  node;\n                              \n                      return (\n                       <Node \n                           key={nodeIdx} \n                           xplayer={xplayer} \n                           oplayer={oplayer}\n                           x={x}\n                           y={y}\n                           size={size.row < 5 && size.col < 5 ? '100' : (size.row < 10 && size.col < 10 ? '50' : '')} \n                           onNodeClick={this.onBoardClick}\n                        />\n                      );}\n                    )}\n                   </div>\n                  );\n              })}\n          </div>\n        );\n    }\n}","import React, {Component} from 'react';\nimport {gameScreen} from './global'\nimport Menu from './Menu'\nimport './Menu.css';\nimport Board from './board/Board'\n\nexport default class Main extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tscreenIndex: gameScreen.Home\n\t\t}\n\t}\n\n\tonMenuClick = (screenIndex) => {\n\t\tthis.setState({screenIndex});\n\t}\n\n\trender(){\n\t\tconst {screenIndex} = this.state;\n\t\tswitch(screenIndex){\n\t\t\tcase gameScreen.Caro:\n\t\t\t\t\n\t\t\t\treturn (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div id=\"main-caro\">\n\t\t\t\t\t\t\t<Board size={{row: 30, col: 52}}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"menu-button menu-button-back\" \n\t\t\t\t\t\t\tonClick={() => this.onMenuClick(gameScreen.Home)}>\n\t\t\t\t\t\t\t<h2>Back</h2>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t\n\t\t\tcase gameScreen.TicTacToe:\n\t\t\t\t\n\t\t\t\treturn (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div id=\"tic-tac-toe\">\n\t\t\t\t\t\t\t<Board size={{row: 3, col: 3}}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"menu-button menu-button-back\" \n\t\t\t\t\t\t\tonClick={() => this.onMenuClick(gameScreen.Home)}>\n\t\t\t\t\t\t\t<h2>Back</h2>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t\n\t\t\tdefault:\n\t\t\t\treturn (\n\t\t\t\t\t<Menu onMenuClick={this.onMenuClick}/>\n\t\t\t\t);\n\t\t\t\n\t\t}\n\t}\n}","import React from 'react';\n\nimport Header from './components/Header'\nimport Main from './components/Main'\n\nimport './Carox.css';\n\nfunction Carox() {\n\n  return (\n    <div className=\"Carox\">\n      <Header />\n      <Main />\n    </div>\n  );\n}\n\nexport default Carox;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Carox from './Carox';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Carox />, document.getElementById('carox'));\n\n// If you want your app to work offline and load faster, you can change unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}